<!--row y col-lg-4 en bootstrap.min-->
<div class="container-timeline">
    @model PortalWebCliente.Models.ProjectModel;
    <!-- BEGIN CONTENT -->
    @{
        int distanciaPorEtapa = 200, porcentajePorEtapa = 820 / 4;
        int c = 1, cantidadTareasTerminadasDeLaEtapaAnterior = 0,
        caminoRecorrido, caminoFaltante, porcentajeRecorrido = 0;
        string state;
    }
    @if (Model.stages.Count == 5)
    {
        distanciaPorEtapa = 160; porcentajePorEtapa = 820 / 5;
    }
    <h2 class="titulo-operacion">@Model.name</h2>
    <div class="Timeline">
        <svg height="5" width="0">
            <line x1="0" y1="0" x2="0" y2="0" style="stroke:#ec9404;stroke-width:5" />
            Sorry, your browser does not support inline SVG.
        </svg>
        @for (int i = 0; i < Model.stages.Count; i++)
        {
            @if (c == 1)
            {
                <svg height="5" width="150">
                    <line x1="0" y1="0" x2="0" y2="0" style="stroke:#ec9404;stroke-width:5" />
                    Sorry, your browser does not support inline SVG.
                </svg>
            }
            else
            {
                @if (cantidadTareasTerminadasDeLaEtapaAnterior ==
            Model.stages.ElementAt(i - 1).tasks.Count)
                {
                    porcentajeRecorrido += porcentajePorEtapa;
                    <svg height="5" width="@distanciaPorEtapa">
                        <line x1="0" y1="0" x2="@distanciaPorEtapa" y2="0" style="stroke:#ec9404;stroke-width:5" />
                        Sorry, your browser does not support inline SVG.
                    </svg>
                }
                else
                {
                    caminoRecorrido = (distanciaPorEtapa / Model.stages.ElementAt(i - 1).tasks.Count) *
                    cantidadTareasTerminadasDeLaEtapaAnterior;
                    caminoFaltante = distanciaPorEtapa - caminoRecorrido;
                    <svg height="5" width="@caminoRecorrido">
                        <line x1="0" y1="0" x2="@caminoRecorrido" y2="0" style="stroke:#ec9404;stroke-width:5" />
                        Sorry, your browser does not support inline SVG.
                    </svg>
                    <svg height="5" width="@caminoFaltante">
                        <line x1="0" y1="0" x2="@caminoFaltante" y2="0" style="stroke:gray;stroke-width:5" />
                        Sorry, your browser does not support inline SVG.
                    </svg>
                    porcentajeRecorrido += (porcentajePorEtapa / Model.stages.ElementAt(i - 1).tasks.Count) *
                    cantidadTareasTerminadasDeLaEtapaAnterior;
                }
            }
            <div class="event2">
                <div class="event2Bubble">
                    <label><b>@Model.stages.ElementAt(i).name</b></label>
                    <div class="eventTime">
                        <ul>
                            @{
                                cantidadTareasTerminadasDeLaEtapaAnterior = 0;
                            }
                            @for (int j = 0; j < Model.stages.ElementAt(i).tasks.Count; j++)
                            {
                                TaskModel task = Model.stages.ElementAt(i).tasks.ElementAt(j);
                                @if (task.kanbanState == "done")
                                {
                                    state = "check";
                                    cantidadTareasTerminadasDeLaEtapaAnterior++;
                                }
                                else
                                {
                                    state = "close";
                                }
                                <li>
                                    <div class="icon-@state"></div>
                                    <div class="task-name">
                                        @task.name
                                    </div>
                                    <div class="divUpload">
                                        <input class="inputFile" asp-for="stages.ElementAt(i).tasks.ElementAt(j).document" type="file" title="Subir Documento" />
                                    </div>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
                @if (c == 1 || cantidadTareasTerminadasDeLaEtapaAnterior ==
            Model.stages.ElementAt(i).tasks.Count)
                {
                    c++;
                    <svg height="20" width="20">
                        <circle cx="10" cy="11" r="5" fill="#ec9404" />
                    </svg>
                }
                else
                {
                    <svg height="20" width="20">
                        <circle cx="10" cy="11" r="5" fill="gray" />
                    </svg>
                }
            </div>
        }
        <div>
            @{
                int k = -890 + porcentajeRecorrido;
            }
            <img class="now" src="~/images/camionDelta.png" alt="Alternate Text"
                 style="margin-left:@k%;" />
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        $('.inputFile').on("change", function () {
            var fileName = $(this).val().split("\\").pop();
            $(this).title(fileName);
        });
    });
</script>