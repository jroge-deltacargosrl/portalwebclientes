<link href="http://fonts.googleapis.com/css?family=Open+Sans:400,300,600,700&subset=all" rel="stylesheet" type="text/css" />
<link href="../assets/global/plugins/font-awesome/css/font-awesome.min.css" rel="stylesheet" type="text/css" />
<link href="../assets/global/plugins/simple-line-icons/simple-line-icons.min.css" rel="stylesheet" type="text/css" />
<link href="../assets/global/plugins/bootstrap/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
<link href="../assets/global/plugins/uniform/css/uniform.default.css" rel="stylesheet" type="text/css" />
<link href="../assets/global/plugins/bootstrap-switch/css/bootstrap-switch.min.css" rel="stylesheet" type="text/css" />
<!-- END GLOBAL MANDATORY STYLES -->
<!-- BEGIN PAGE LEVEL PLUGINS -->
<link href="../assets/global/plugins/bootstrap-fileinput/bootstrap-fileinput.css" rel="stylesheet" type="text/css" />
<!-- END PAGE LEVEL PLUGINS -->
<!-- BEGIN THEME GLOBAL STYLES -->
<link href="../assets/global/css/components.min.css" rel="stylesheet" id="style_components" type="text/css" />
<link href="../assets/global/css/plugins.min.css" rel="stylesheet" type="text/css" />
<!-- END THEME GLOBAL STYLES -->
<!-- BEGIN THEME LAYOUT STYLES -->
<link href="../assets/layouts/layout2/css/layout.min.css" rel="stylesheet" type="text/css" />
<link href="../assets/layouts/layout2/css/themes/blue.min.css" rel="stylesheet" type="text/css" id="style_color" />
<link href="../assets/layouts/layout2/css/custom.min.css" rel="stylesheet" type="text/css" />
<!-- END THEME LAYOUT STYLES -->
<link rel="shortcut icon" href="favicon.ico" />
<!-- END HEAD -->
<!--row y col-lg-4 en bootstrap.min-->
<div class="container-timeline">
    @model PortalWebCliente.Models.ProjectModel;
    <!-- BEGIN CONTENT -->
    @{
        int distanciaPorEtapa = 800 / Model.stages.Count,
        porcentajePorEtapa = (820 / Model.stages.Count);
        if (Model.stages.Count == 5)
        {
            porcentajePorEtapa += 30;
        }
        else
        {
            porcentajePorEtapa += 70;
        }
        int c = 1, cantidadDeTareasTerminadasEnLaEtapaActual = 0, cantidadDeTareasTerminadasEnLaEtapaSiguiente = 0,
        caminoRecorrido, caminoFaltante, porcentajeRecorrido = 0;
        string state;
    }
    <h2 class="titulo-operacion">@Model.name</h2>
    <div class="Timeline">
        <svg height="5" width="0">
            <line x1="0" y1="0" x2="0" y2="0" style="stroke:#ec9404;stroke-width:5" />
            Sorry, your browser does not support inline SVG.
        </svg>
        @for (int i = 0; i < Model.stages.Count - 1; i++)
        {
            @if (c == 1)
            {
                c++;
                <svg height="5" width="150">
                    <line x1="0" y1="0" x2="0" y2="0" style="stroke:#ec9404;stroke-width:5" />
                    Sorry, your browser does not support inline SVG.
                </svg>
            }

            <div class="event2">
                <div class="event2Bubble">
                    <label><b>@Model.stages.ElementAt(i).name</b></label>
                    <div class="eventTime">
                        <ul>
                            @{
                                cantidadDeTareasTerminadasEnLaEtapaActual = 0;
                            }
                            @for (int j = 0; j < Model.stages.ElementAt(i).tasks.Count; j++)
                            {
                                TaskModel task = Model.stages.ElementAt(i).tasks.ElementAt(j);
                                @if (task.kanbanState == "done")
                                {
                                    state = "check";
                                    cantidadDeTareasTerminadasEnLaEtapaActual++;
                                }
                                else
                                {
                                    state = "no-check";
                                }
                                <li>
                                    <div class="@state"></div>
                                    <div class="task-name">
                                        @task.name
                                    </div>
                                    <div class="options">
                                        <div class="divUpload" data-toggle="modal" href="#basic"></div>
                                        <!--<input type="file" name="document" id="fileupload" class="inputFile" title="Subir Documento" />-->
                                        <div class="divView" title="Ver Documento"></div>
                                        <div class="divDownload" title="Descargar Documento"></div>
                                    </div>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
            @if (cantidadDeTareasTerminadasEnLaEtapaActual ==
          Model.stages.ElementAt(i).tasks.Count)
            {
                <svg height="20" width="20">
                    <circle cx="10" cy="11" r="5" fill="#ec9404" />
                </svg>
            }
            else
            {
                <svg height="20" width="20">
                    <circle cx="10" cy="11" r="5" fill="gray" />
                </svg>
            }

            cantidadDeTareasTerminadasEnLaEtapaSiguiente = 0;
            @foreach (TaskModel task in Model.stages.ElementAt(i + 1).tasks)
            {
                if (task.kanbanState == "done")
                {
                    cantidadDeTareasTerminadasEnLaEtapaSiguiente++;
                }
            }
            @if (cantidadDeTareasTerminadasEnLaEtapaSiguiente ==
          Model.stages.ElementAt(i + 1).tasks.Count)
            {
                porcentajeRecorrido += porcentajePorEtapa;
                <svg height="5" width="@distanciaPorEtapa">
                    <line x1="0" y1="0" x2="@distanciaPorEtapa" y2="0" style="stroke:#ec9404;stroke-width:5" />
                    Sorry, your browser does not support inline SVG.
                </svg>
            }
            else
            {
                caminoRecorrido = (distanciaPorEtapa / Model.stages.ElementAt(i + 1).tasks.Count) *
                cantidadDeTareasTerminadasEnLaEtapaSiguiente;
                caminoFaltante = distanciaPorEtapa - caminoRecorrido;
                <svg height="5" width="@caminoRecorrido">
                    <line x1="0" y1="0" x2="@caminoRecorrido" y2="0" style="stroke:#ec9404;stroke-width:5" />
                    Sorry, your browser does not support inline SVG.
                </svg>
                <svg height="5" width="@caminoFaltante">
                    <line x1="0" y1="0" x2="@caminoFaltante" y2="0" style="stroke:gray;stroke-width:5" />
                    Sorry, your browser does not support inline SVG.
                </svg>
                porcentajeRecorrido += ((porcentajePorEtapa / Model.stages.ElementAt(i + 1).tasks.Count)) *
                cantidadDeTareasTerminadasEnLaEtapaSiguiente;
            }
        }
        <div class="event2">
            <div class="event2Bubble">
                <label><b>@Model.stages.Last().name</b></label>
                <div class="eventTime">
                    <ul>
                        @{
                            cantidadDeTareasTerminadasEnLaEtapaActual = 0;
                        }
                        @for (int j = 0; j < Model.stages.Last().tasks.Count; j++)
                        {
                            TaskModel task = Model.stages.Last().tasks.ElementAt(j);
                            @if (task.kanbanState == "done")
                            {
                                state = "check";
                                cantidadDeTareasTerminadasEnLaEtapaActual++;
                            }
                            else
                            {
                                state = "no-check";
                            }
                            <li>
                                <div class="@state"></div>
                                <div class="task-name">
                                    @task.name
                                </div>
                                <div class="options">
                                    <div class="divUpload"><input type="file" id="fileupload" name="attachments[]" multiple class="inputFile" asp-for="stages.Last().tasks.ElementAt(j).document" title="Subir Documento" /></div>
                                    <div class="divView"></div>
                                    <div class="divDownload"></div>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
        @if (cantidadDeTareasTerminadasEnLaEtapaActual ==
      Model.stages.Last().tasks.Count)
        {
            <svg height="20" width="20">
                <circle cx="10" cy="11" r="5" fill="#ec9404" />
            </svg>
        }
        else
        {
            <svg height="20" width="20">
                <circle cx="10" cy="11" r="5" fill="gray" />
            </svg>
        }
        <div>
            @{
                int k = -890 + porcentajeRecorrido;
                //INICIO DE RECORRIDO EN 890
                //FIN DE RECORRIDO EN 70
            }
            <img class="now" src="~/images/camionDelta.png" alt="Alternate Text"
                 style="margin-left:@k%;" />
        </div>
    </div>
</div>
<!------------------------------------------------------------------------------------------------------->
<div class="modal fade" id="basic" tabindex="-1" role="full" aria-hidden="true" style="display: none;">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-controller="Operations" asp-action="UploadFile" method="POST" enctype="multipart/form-data">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                    <h4 class="modal-title">Subir documento</h4>
                </div>
                <div class="modal-body">
                    <div class="fileinput fileinput-new" data-provides="fileinput">
                        <div class="input-group input-large">
                            <div class="form-control uneditable-input input-fixed input-medium" data-trigger="fileinput">
                                <i class="fa fa-file fileinput-exists"></i>&nbsp;
                                <span class="fileinput-filename"> </span>
                            </div>
                            <span class="input-group-addon btn default btn-file">
                                <span class="fileinput-new"> Select file </span>
                                <span class="fileinput-exists"> Change </span>
                                <input type="file" name="..."asp-for="@Model.stages[0].tasks[0].document">
                            </span>
                            <a href="javascript:;" class="input-group-addon btn red fileinput-exists" data-dismiss="fileinput"> Remove </a>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn dark btn-outline" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btnDelta">Save changes</button>
                </div>
            </form>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>